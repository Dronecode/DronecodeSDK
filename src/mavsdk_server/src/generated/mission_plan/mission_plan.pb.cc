// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mission_plan/mission_plan.proto

#include "mission_plan/mission_plan.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mission_5fplan_2fmission_5fplan_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mission_5fplan_2fmission_5fplan_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto;
namespace mavsdk {
namespace rpc {
namespace mission_plan {
class UploadMissionPlanRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadMissionPlanRequest> _instance;
} _UploadMissionPlanRequest_default_instance_;
class UploadMissionPlanResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadMissionPlanResponse> _instance;
} _UploadMissionPlanResponse_default_instance_;
class CancelMissionPlanUploadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelMissionPlanUploadRequest> _instance;
} _CancelMissionPlanUploadRequest_default_instance_;
class CancelMissionPlanUploadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelMissionPlanUploadResponse> _instance;
} _CancelMissionPlanUploadResponse_default_instance_;
class StartMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartMissionRequest> _instance;
} _StartMissionRequest_default_instance_;
class StartMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartMissionResponse> _instance;
} _StartMissionResponse_default_instance_;
class PauseMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseMissionRequest> _instance;
} _PauseMissionRequest_default_instance_;
class PauseMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseMissionResponse> _instance;
} _PauseMissionResponse_default_instance_;
class ClearMissionPlanRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearMissionPlanRequest> _instance;
} _ClearMissionPlanRequest_default_instance_;
class ClearMissionPlanResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearMissionPlanResponse> _instance;
} _ClearMissionPlanResponse_default_instance_;
class SetCurrentMissionItemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCurrentMissionItemRequest> _instance;
} _SetCurrentMissionItemRequest_default_instance_;
class SetCurrentMissionItemResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCurrentMissionItemResponse> _instance;
} _SetCurrentMissionItemResponse_default_instance_;
class IsMissionFinishedRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsMissionFinishedRequest> _instance;
} _IsMissionFinishedRequest_default_instance_;
class IsMissionFinishedResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsMissionFinishedResponse> _instance;
} _IsMissionFinishedResponse_default_instance_;
class SubscribeMissionProgressRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeMissionProgressRequest> _instance;
} _SubscribeMissionProgressRequest_default_instance_;
class MissionProgressResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionProgressResponse> _instance;
} _MissionProgressResponse_default_instance_;
class MissionProgressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionProgress> _instance;
} _MissionProgress_default_instance_;
class MissionPlanResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionPlanResult> _instance;
} _MissionPlanResult_default_instance_;
}  // namespace mission_plan
}  // namespace rpc
}  // namespace mavsdk
static void InitDefaultsscc_info_CancelMissionPlanUploadRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_CancelMissionPlanUploadRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelMissionPlanUploadRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelMissionPlanUploadRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_CancelMissionPlanUploadResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_CancelMissionPlanUploadResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CancelMissionPlanUploadResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CancelMissionPlanUploadResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_ClearMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_ClearMissionPlanRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::ClearMissionPlanRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::ClearMissionPlanRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_ClearMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_ClearMissionPlanResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::ClearMissionPlanResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::ClearMissionPlanResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClearMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClearMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_IsMissionFinishedRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_IsMissionFinishedRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::IsMissionFinishedRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::IsMissionFinishedRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IsMissionFinishedRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IsMissionFinishedRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_IsMissionFinishedResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_IsMissionFinishedResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::IsMissionFinishedResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::IsMissionFinishedResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IsMissionFinishedResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IsMissionFinishedResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_MissionPlanResult_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::MissionPlanResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::MissionPlanResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_MissionProgress_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::MissionProgress();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::MissionProgress::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_MissionProgressResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_MissionProgressResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::MissionProgressResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::MissionProgressResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MissionProgressResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MissionProgressResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_PauseMissionRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_PauseMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::PauseMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::PauseMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PauseMissionRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PauseMissionRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_PauseMissionResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_PauseMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::PauseMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::PauseMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PauseMissionResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PauseMissionResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_SetCurrentMissionItemRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_SetCurrentMissionItemRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCurrentMissionItemRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetCurrentMissionItemRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_SetCurrentMissionItemResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_SetCurrentMissionItemResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetCurrentMissionItemResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetCurrentMissionItemResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_StartMissionRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_StartMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::StartMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::StartMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartMissionRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartMissionRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_StartMissionResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_StartMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::StartMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::StartMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StartMissionResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StartMissionResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeMissionProgressRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_SubscribeMissionProgressRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeMissionProgressRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeMissionProgressRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_UploadMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_UploadMissionPlanRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::UploadMissionPlanRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::UploadMissionPlanRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UploadMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UploadMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto}, {}};

static void InitDefaultsscc_info_UploadMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_plan::_UploadMissionPlanResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_plan::UploadMissionPlanResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_plan::UploadMissionPlanResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UploadMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UploadMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto}, {
      &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mission_5fplan_2fmission_5fplan_2eproto[18];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mission_5fplan_2fmission_5fplan_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mission_5fplan_2fmission_5fplan_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mission_5fplan_2fmission_5fplan_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::UploadMissionPlanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::UploadMissionPlanRequest, json_plan_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::UploadMissionPlanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::UploadMissionPlanResponse, mission_plan_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse, mission_plan_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::StartMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::StartMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::StartMissionResponse, mission_plan_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::PauseMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::PauseMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::PauseMissionResponse, mission_plan_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::ClearMissionPlanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::ClearMissionPlanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::ClearMissionPlanResponse, mission_plan_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse, mission_plan_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::IsMissionFinishedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::IsMissionFinishedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::IsMissionFinishedResponse, mission_plan_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::IsMissionFinishedResponse, is_finished_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionProgressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionProgressResponse, mission_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionProgress, current_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionProgress, total_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionPlanResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionPlanResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_plan::MissionPlanResult, result_str_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::mission_plan::UploadMissionPlanRequest)},
  { 6, -1, sizeof(::mavsdk::rpc::mission_plan::UploadMissionPlanResponse)},
  { 12, -1, sizeof(::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest)},
  { 17, -1, sizeof(::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse)},
  { 23, -1, sizeof(::mavsdk::rpc::mission_plan::StartMissionRequest)},
  { 28, -1, sizeof(::mavsdk::rpc::mission_plan::StartMissionResponse)},
  { 34, -1, sizeof(::mavsdk::rpc::mission_plan::PauseMissionRequest)},
  { 39, -1, sizeof(::mavsdk::rpc::mission_plan::PauseMissionResponse)},
  { 45, -1, sizeof(::mavsdk::rpc::mission_plan::ClearMissionPlanRequest)},
  { 50, -1, sizeof(::mavsdk::rpc::mission_plan::ClearMissionPlanResponse)},
  { 56, -1, sizeof(::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest)},
  { 62, -1, sizeof(::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse)},
  { 68, -1, sizeof(::mavsdk::rpc::mission_plan::IsMissionFinishedRequest)},
  { 73, -1, sizeof(::mavsdk::rpc::mission_plan::IsMissionFinishedResponse)},
  { 80, -1, sizeof(::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest)},
  { 85, -1, sizeof(::mavsdk::rpc::mission_plan::MissionProgressResponse)},
  { 91, -1, sizeof(::mavsdk::rpc::mission_plan::MissionProgress)},
  { 98, -1, sizeof(::mavsdk::rpc::mission_plan::MissionPlanResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_UploadMissionPlanRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_UploadMissionPlanResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_CancelMissionPlanUploadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_CancelMissionPlanUploadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_StartMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_StartMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_PauseMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_PauseMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_ClearMissionPlanRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_ClearMissionPlanResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_SetCurrentMissionItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_SetCurrentMissionItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_IsMissionFinishedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_IsMissionFinishedResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_SubscribeMissionProgressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_MissionProgressResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_MissionProgress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_plan::_MissionPlanResult_default_instance_),
};

const char descriptor_table_protodef_mission_5fplan_2fmission_5fplan_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037mission_plan/mission_plan.proto\022\027mavsd"
  "k.rpc.mission_plan\032\024mavsdk_options.proto"
  "\"-\n\030UploadMissionPlanRequest\022\021\n\tjson_pla"
  "n\030\001 \001(\t\"d\n\031UploadMissionPlanResponse\022G\n\023"
  "mission_plan_result\030\001 \001(\0132*.mavsdk.rpc.m"
  "ission_plan.MissionPlanResult\" \n\036CancelM"
  "issionPlanUploadRequest\"j\n\037CancelMission"
  "PlanUploadResponse\022G\n\023mission_plan_resul"
  "t\030\001 \001(\0132*.mavsdk.rpc.mission_plan.Missio"
  "nPlanResult\"\025\n\023StartMissionRequest\"_\n\024St"
  "artMissionResponse\022G\n\023mission_plan_resul"
  "t\030\001 \001(\0132*.mavsdk.rpc.mission_plan.Missio"
  "nPlanResult\"\025\n\023PauseMissionRequest\"_\n\024Pa"
  "useMissionResponse\022G\n\023mission_plan_resul"
  "t\030\001 \001(\0132*.mavsdk.rpc.mission_plan.Missio"
  "nPlanResult\"\031\n\027ClearMissionPlanRequest\"c"
  "\n\030ClearMissionPlanResponse\022G\n\023mission_pl"
  "an_result\030\001 \001(\0132*.mavsdk.rpc.mission_pla"
  "n.MissionPlanResult\"-\n\034SetCurrentMission"
  "ItemRequest\022\r\n\005index\030\001 \001(\005\"h\n\035SetCurrent"
  "MissionItemResponse\022G\n\023mission_plan_resu"
  "lt\030\001 \001(\0132*.mavsdk.rpc.mission_plan.Missi"
  "onPlanResult\"\032\n\030IsMissionFinishedRequest"
  "\"y\n\031IsMissionFinishedResponse\022G\n\023mission"
  "_plan_result\030\001 \001(\0132*.mavsdk.rpc.mission_"
  "plan.MissionPlanResult\022\023\n\013is_finished\030\002 "
  "\001(\010\"!\n\037SubscribeMissionProgressRequest\"]"
  "\n\027MissionProgressResponse\022B\n\020mission_pro"
  "gress\030\001 \001(\0132(.mavsdk.rpc.mission_plan.Mi"
  "ssionProgress\"1\n\017MissionProgress\022\017\n\007curr"
  "ent\030\001 \001(\005\022\r\n\005total\030\002 \001(\005\"\370\002\n\021MissionPlan"
  "Result\022A\n\006result\030\001 \001(\01621.mavsdk.rpc.miss"
  "ion_plan.MissionPlanResult.Result\022\022\n\nres"
  "ult_str\030\002 \001(\t\"\213\002\n\006Result\022\022\n\016RESULT_UNKNO"
  "WN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\020\n\014RESULT_ERROR"
  "\020\002\022!\n\035RESULT_TOO_MANY_MISSION_ITEMS\020\003\022\017\n"
  "\013RESULT_BUSY\020\004\022\022\n\016RESULT_TIMEOUT\020\005\022\033\n\027RE"
  "SULT_INVALID_ARGUMENT\020\006\022\037\n\033RESULT_FAILED"
  "_TO_PARSE_PLAN\020\007\022\"\n\036RESULT_UNSUPPORTED_M"
  "ISSION_CMD\020\010\022\035\n\031RESULT_TRANSFER_CANCELLE"
  "D\020\t2\233\010\n\022MissionPlanService\022|\n\021UploadMiss"
  "ionPlan\0221.mavsdk.rpc.mission_plan.Upload"
  "MissionPlanRequest\0322.mavsdk.rpc.mission_"
  "plan.UploadMissionPlanResponse\"\000\022\222\001\n\027Can"
  "celMissionPlanUpload\0227.mavsdk.rpc.missio"
  "n_plan.CancelMissionPlanUploadRequest\0328."
  "mavsdk.rpc.mission_plan.CancelMissionPla"
  "nUploadResponse\"\004\200\265\030\001\022y\n\020ClearMissionPla"
  "n\0220.mavsdk.rpc.mission_plan.ClearMission"
  "PlanRequest\0321.mavsdk.rpc.mission_plan.Cl"
  "earMissionPlanResponse\"\000\022m\n\014StartMission"
  "\022,.mavsdk.rpc.mission_plan.StartMissionR"
  "equest\032-.mavsdk.rpc.mission_plan.StartMi"
  "ssionResponse\"\000\022m\n\014PauseMission\022,.mavsdk"
  ".rpc.mission_plan.PauseMissionRequest\032-."
  "mavsdk.rpc.mission_plan.PauseMissionResp"
  "onse\"\000\022\210\001\n\025SetCurrentMissionItem\0225.mavsd"
  "k.rpc.mission_plan.SetCurrentMissionItem"
  "Request\0326.mavsdk.rpc.mission_plan.SetCur"
  "rentMissionItemResponse\"\000\022\200\001\n\021IsMissionF"
  "inished\0221.mavsdk.rpc.mission_plan.IsMiss"
  "ionFinishedRequest\0322.mavsdk.rpc.mission_"
  "plan.IsMissionFinishedResponse\"\004\200\265\030\001\022\212\001\n"
  "\030SubscribeMissionProgress\0228.mavsdk.rpc.m"
  "ission_plan.SubscribeMissionProgressRequ"
  "est\0320.mavsdk.rpc.mission_plan.MissionPro"
  "gressResponse\"\0000\001B*\n\026io.mavsdk.mission_p"
  "lanB\020MissionPlanProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mission_5fplan_2fmission_5fplan_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mission_5fplan_2fmission_5fplan_2eproto_sccs[18] = {
  &scc_info_CancelMissionPlanUploadRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_CancelMissionPlanUploadResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_ClearMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_ClearMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_IsMissionFinishedRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_IsMissionFinishedResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_MissionProgressResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_PauseMissionRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_PauseMissionResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_SetCurrentMissionItemRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_SetCurrentMissionItemResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_StartMissionRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_StartMissionResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_SubscribeMissionProgressRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_UploadMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto.base,
  &scc_info_UploadMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mission_5fplan_2fmission_5fplan_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mission_5fplan_2fmission_5fplan_2eproto = {
  false, false, descriptor_table_protodef_mission_5fplan_2fmission_5fplan_2eproto, "mission_plan/mission_plan.proto", 2709,
  &descriptor_table_mission_5fplan_2fmission_5fplan_2eproto_once, descriptor_table_mission_5fplan_2fmission_5fplan_2eproto_sccs, descriptor_table_mission_5fplan_2fmission_5fplan_2eproto_deps, 18, 1,
  schemas, file_default_instances, TableStruct_mission_5fplan_2fmission_5fplan_2eproto::offsets,
  file_level_metadata_mission_5fplan_2fmission_5fplan_2eproto, 18, file_level_enum_descriptors_mission_5fplan_2fmission_5fplan_2eproto, file_level_service_descriptors_mission_5fplan_2fmission_5fplan_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mission_5fplan_2fmission_5fplan_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mission_5fplan_2fmission_5fplan_2eproto)), true);
namespace mavsdk {
namespace rpc {
namespace mission_plan {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MissionPlanResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mission_5fplan_2fmission_5fplan_2eproto);
  return file_level_enum_descriptors_mission_5fplan_2fmission_5fplan_2eproto[0];
}
bool MissionPlanResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_UNKNOWN;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_SUCCESS;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_ERROR;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_TOO_MANY_MISSION_ITEMS;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_BUSY;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_TIMEOUT;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_INVALID_ARGUMENT;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_FAILED_TO_PARSE_PLAN;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_UNSUPPORTED_MISSION_CMD;
constexpr MissionPlanResult_Result MissionPlanResult::RESULT_TRANSFER_CANCELLED;
constexpr MissionPlanResult_Result MissionPlanResult::Result_MIN;
constexpr MissionPlanResult_Result MissionPlanResult::Result_MAX;
constexpr int MissionPlanResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void UploadMissionPlanRequest::InitAsDefaultInstance() {
}
class UploadMissionPlanRequest::_Internal {
 public:
};

UploadMissionPlanRequest::UploadMissionPlanRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
}
UploadMissionPlanRequest::UploadMissionPlanRequest(const UploadMissionPlanRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  json_plan_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_json_plan().empty()) {
    json_plan_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_json_plan(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
}

void UploadMissionPlanRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  json_plan_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UploadMissionPlanRequest::~UploadMissionPlanRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadMissionPlanRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  json_plan_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadMissionPlanRequest::ArenaDtor(void* object) {
  UploadMissionPlanRequest* _this = reinterpret_cast< UploadMissionPlanRequest* >(object);
  (void)_this;
}
void UploadMissionPlanRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadMissionPlanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadMissionPlanRequest& UploadMissionPlanRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void UploadMissionPlanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_plan_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadMissionPlanRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string json_plan = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_json_plan();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.mission_plan.UploadMissionPlanRequest.json_plan"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadMissionPlanRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json_plan = 1;
  if (this->json_plan().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_json_plan().data(), static_cast<int>(this->_internal_json_plan().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.mission_plan.UploadMissionPlanRequest.json_plan");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_json_plan(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  return target;
}

size_t UploadMissionPlanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string json_plan = 1;
  if (this->json_plan().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_json_plan());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadMissionPlanRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadMissionPlanRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadMissionPlanRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
    MergeFrom(*source);
  }
}

void UploadMissionPlanRequest::MergeFrom(const UploadMissionPlanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.json_plan().size() > 0) {
    _internal_set_json_plan(from._internal_json_plan());
  }
}

void UploadMissionPlanRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadMissionPlanRequest::CopyFrom(const UploadMissionPlanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadMissionPlanRequest::IsInitialized() const {
  return true;
}

void UploadMissionPlanRequest::InternalSwap(UploadMissionPlanRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  json_plan_.Swap(&other->json_plan_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadMissionPlanRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UploadMissionPlanResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_UploadMissionPlanResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class UploadMissionPlanResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const UploadMissionPlanResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
UploadMissionPlanResponse::_Internal::mission_plan_result(const UploadMissionPlanResponse* msg) {
  return *msg->mission_plan_result_;
}
UploadMissionPlanResponse::UploadMissionPlanResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
}
UploadMissionPlanResponse::UploadMissionPlanResponse(const UploadMissionPlanResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
}

void UploadMissionPlanResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_plan_result_ = nullptr;
}

UploadMissionPlanResponse::~UploadMissionPlanResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadMissionPlanResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void UploadMissionPlanResponse::ArenaDtor(void* object) {
  UploadMissionPlanResponse* _this = reinterpret_cast< UploadMissionPlanResponse* >(object);
  (void)_this;
}
void UploadMissionPlanResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadMissionPlanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadMissionPlanResponse& UploadMissionPlanResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void UploadMissionPlanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadMissionPlanResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadMissionPlanResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  return target;
}

size_t UploadMissionPlanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadMissionPlanResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadMissionPlanResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadMissionPlanResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
    MergeFrom(*source);
  }
}

void UploadMissionPlanResponse::MergeFrom(const UploadMissionPlanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
}

void UploadMissionPlanResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadMissionPlanResponse::CopyFrom(const UploadMissionPlanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.UploadMissionPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadMissionPlanResponse::IsInitialized() const {
  return true;
}

void UploadMissionPlanResponse::InternalSwap(UploadMissionPlanResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_plan_result_, other->mission_plan_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadMissionPlanResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelMissionPlanUploadRequest::InitAsDefaultInstance() {
}
class CancelMissionPlanUploadRequest::_Internal {
 public:
};

CancelMissionPlanUploadRequest::CancelMissionPlanUploadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
}
CancelMissionPlanUploadRequest::CancelMissionPlanUploadRequest(const CancelMissionPlanUploadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
}

void CancelMissionPlanUploadRequest::SharedCtor() {
}

CancelMissionPlanUploadRequest::~CancelMissionPlanUploadRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelMissionPlanUploadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CancelMissionPlanUploadRequest::ArenaDtor(void* object) {
  CancelMissionPlanUploadRequest* _this = reinterpret_cast< CancelMissionPlanUploadRequest* >(object);
  (void)_this;
}
void CancelMissionPlanUploadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelMissionPlanUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelMissionPlanUploadRequest& CancelMissionPlanUploadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelMissionPlanUploadRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void CancelMissionPlanUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelMissionPlanUploadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelMissionPlanUploadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  return target;
}

size_t CancelMissionPlanUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelMissionPlanUploadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMissionPlanUploadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelMissionPlanUploadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
    MergeFrom(*source);
  }
}

void CancelMissionPlanUploadRequest::MergeFrom(const CancelMissionPlanUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelMissionPlanUploadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMissionPlanUploadRequest::CopyFrom(const CancelMissionPlanUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMissionPlanUploadRequest::IsInitialized() const {
  return true;
}

void CancelMissionPlanUploadRequest::InternalSwap(CancelMissionPlanUploadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelMissionPlanUploadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelMissionPlanUploadResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_CancelMissionPlanUploadResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class CancelMissionPlanUploadResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const CancelMissionPlanUploadResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
CancelMissionPlanUploadResponse::_Internal::mission_plan_result(const CancelMissionPlanUploadResponse* msg) {
  return *msg->mission_plan_result_;
}
CancelMissionPlanUploadResponse::CancelMissionPlanUploadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
}
CancelMissionPlanUploadResponse::CancelMissionPlanUploadResponse(const CancelMissionPlanUploadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
}

void CancelMissionPlanUploadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelMissionPlanUploadResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_plan_result_ = nullptr;
}

CancelMissionPlanUploadResponse::~CancelMissionPlanUploadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelMissionPlanUploadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void CancelMissionPlanUploadResponse::ArenaDtor(void* object) {
  CancelMissionPlanUploadResponse* _this = reinterpret_cast< CancelMissionPlanUploadResponse* >(object);
  (void)_this;
}
void CancelMissionPlanUploadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelMissionPlanUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelMissionPlanUploadResponse& CancelMissionPlanUploadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelMissionPlanUploadResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void CancelMissionPlanUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelMissionPlanUploadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelMissionPlanUploadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  return target;
}

size_t CancelMissionPlanUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelMissionPlanUploadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMissionPlanUploadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelMissionPlanUploadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
    MergeFrom(*source);
  }
}

void CancelMissionPlanUploadResponse::MergeFrom(const CancelMissionPlanUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
}

void CancelMissionPlanUploadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMissionPlanUploadResponse::CopyFrom(const CancelMissionPlanUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.CancelMissionPlanUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMissionPlanUploadResponse::IsInitialized() const {
  return true;
}

void CancelMissionPlanUploadResponse::InternalSwap(CancelMissionPlanUploadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_plan_result_, other->mission_plan_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelMissionPlanUploadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartMissionRequest::InitAsDefaultInstance() {
}
class StartMissionRequest::_Internal {
 public:
};

StartMissionRequest::StartMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.StartMissionRequest)
}
StartMissionRequest::StartMissionRequest(const StartMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.StartMissionRequest)
}

void StartMissionRequest::SharedCtor() {
}

StartMissionRequest::~StartMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.StartMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StartMissionRequest::ArenaDtor(void* object) {
  StartMissionRequest* _this = reinterpret_cast< StartMissionRequest* >(object);
  (void)_this;
}
void StartMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartMissionRequest& StartMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartMissionRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void StartMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.StartMissionRequest)
  return target;
}

size_t StartMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.StartMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.StartMissionRequest)
    MergeFrom(*source);
  }
}

void StartMissionRequest::MergeFrom(const StartMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StartMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartMissionRequest::CopyFrom(const StartMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.StartMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMissionRequest::IsInitialized() const {
  return true;
}

void StartMissionRequest::InternalSwap(StartMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_StartMissionResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class StartMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const StartMissionResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
StartMissionResponse::_Internal::mission_plan_result(const StartMissionResponse* msg) {
  return *msg->mission_plan_result_;
}
StartMissionResponse::StartMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.StartMissionResponse)
}
StartMissionResponse::StartMissionResponse(const StartMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.StartMissionResponse)
}

void StartMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartMissionResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_plan_result_ = nullptr;
}

StartMissionResponse::~StartMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.StartMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void StartMissionResponse::ArenaDtor(void* object) {
  StartMissionResponse* _this = reinterpret_cast< StartMissionResponse* >(object);
  (void)_this;
}
void StartMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartMissionResponse& StartMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartMissionResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void StartMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.StartMissionResponse)
  return target;
}

size_t StartMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.StartMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.StartMissionResponse)
    MergeFrom(*source);
  }
}

void StartMissionResponse::MergeFrom(const StartMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
}

void StartMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartMissionResponse::CopyFrom(const StartMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.StartMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMissionResponse::IsInitialized() const {
  return true;
}

void StartMissionResponse::InternalSwap(StartMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_plan_result_, other->mission_plan_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseMissionRequest::InitAsDefaultInstance() {
}
class PauseMissionRequest::_Internal {
 public:
};

PauseMissionRequest::PauseMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.PauseMissionRequest)
}
PauseMissionRequest::PauseMissionRequest(const PauseMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.PauseMissionRequest)
}

void PauseMissionRequest::SharedCtor() {
}

PauseMissionRequest::~PauseMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.PauseMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PauseMissionRequest::ArenaDtor(void* object) {
  PauseMissionRequest* _this = reinterpret_cast< PauseMissionRequest* >(object);
  (void)_this;
}
void PauseMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseMissionRequest& PauseMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseMissionRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void PauseMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.PauseMissionRequest)
  return target;
}

size_t PauseMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.PauseMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.PauseMissionRequest)
    MergeFrom(*source);
  }
}

void PauseMissionRequest::MergeFrom(const PauseMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PauseMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseMissionRequest::CopyFrom(const PauseMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.PauseMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseMissionRequest::IsInitialized() const {
  return true;
}

void PauseMissionRequest::InternalSwap(PauseMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_PauseMissionResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class PauseMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const PauseMissionResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
PauseMissionResponse::_Internal::mission_plan_result(const PauseMissionResponse* msg) {
  return *msg->mission_plan_result_;
}
PauseMissionResponse::PauseMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.PauseMissionResponse)
}
PauseMissionResponse::PauseMissionResponse(const PauseMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.PauseMissionResponse)
}

void PauseMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PauseMissionResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_plan_result_ = nullptr;
}

PauseMissionResponse::~PauseMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.PauseMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void PauseMissionResponse::ArenaDtor(void* object) {
  PauseMissionResponse* _this = reinterpret_cast< PauseMissionResponse* >(object);
  (void)_this;
}
void PauseMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseMissionResponse& PauseMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseMissionResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void PauseMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.PauseMissionResponse)
  return target;
}

size_t PauseMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.PauseMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.PauseMissionResponse)
    MergeFrom(*source);
  }
}

void PauseMissionResponse::MergeFrom(const PauseMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
}

void PauseMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseMissionResponse::CopyFrom(const PauseMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.PauseMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseMissionResponse::IsInitialized() const {
  return true;
}

void PauseMissionResponse::InternalSwap(PauseMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_plan_result_, other->mission_plan_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearMissionPlanRequest::InitAsDefaultInstance() {
}
class ClearMissionPlanRequest::_Internal {
 public:
};

ClearMissionPlanRequest::ClearMissionPlanRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
}
ClearMissionPlanRequest::ClearMissionPlanRequest(const ClearMissionPlanRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
}

void ClearMissionPlanRequest::SharedCtor() {
}

ClearMissionPlanRequest::~ClearMissionPlanRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearMissionPlanRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearMissionPlanRequest::ArenaDtor(void* object) {
  ClearMissionPlanRequest* _this = reinterpret_cast< ClearMissionPlanRequest* >(object);
  (void)_this;
}
void ClearMissionPlanRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearMissionPlanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearMissionPlanRequest& ClearMissionPlanRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearMissionPlanRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void ClearMissionPlanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearMissionPlanRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearMissionPlanRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  return target;
}

size_t ClearMissionPlanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearMissionPlanRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearMissionPlanRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearMissionPlanRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
    MergeFrom(*source);
  }
}

void ClearMissionPlanRequest::MergeFrom(const ClearMissionPlanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearMissionPlanRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearMissionPlanRequest::CopyFrom(const ClearMissionPlanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearMissionPlanRequest::IsInitialized() const {
  return true;
}

void ClearMissionPlanRequest::InternalSwap(ClearMissionPlanRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearMissionPlanRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearMissionPlanResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_ClearMissionPlanResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class ClearMissionPlanResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const ClearMissionPlanResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
ClearMissionPlanResponse::_Internal::mission_plan_result(const ClearMissionPlanResponse* msg) {
  return *msg->mission_plan_result_;
}
ClearMissionPlanResponse::ClearMissionPlanResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
}
ClearMissionPlanResponse::ClearMissionPlanResponse(const ClearMissionPlanResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
}

void ClearMissionPlanResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClearMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_plan_result_ = nullptr;
}

ClearMissionPlanResponse::~ClearMissionPlanResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearMissionPlanResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void ClearMissionPlanResponse::ArenaDtor(void* object) {
  ClearMissionPlanResponse* _this = reinterpret_cast< ClearMissionPlanResponse* >(object);
  (void)_this;
}
void ClearMissionPlanResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearMissionPlanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearMissionPlanResponse& ClearMissionPlanResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearMissionPlanResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void ClearMissionPlanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearMissionPlanResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearMissionPlanResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  return target;
}

size_t ClearMissionPlanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearMissionPlanResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearMissionPlanResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearMissionPlanResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
    MergeFrom(*source);
  }
}

void ClearMissionPlanResponse::MergeFrom(const ClearMissionPlanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
}

void ClearMissionPlanResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearMissionPlanResponse::CopyFrom(const ClearMissionPlanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.ClearMissionPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearMissionPlanResponse::IsInitialized() const {
  return true;
}

void ClearMissionPlanResponse::InternalSwap(ClearMissionPlanResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_plan_result_, other->mission_plan_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearMissionPlanResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetCurrentMissionItemRequest::InitAsDefaultInstance() {
}
class SetCurrentMissionItemRequest::_Internal {
 public:
};

SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
}
SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(const SetCurrentMissionItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
}

void SetCurrentMissionItemRequest::SharedCtor() {
  index_ = 0;
}

SetCurrentMissionItemRequest::~SetCurrentMissionItemRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetCurrentMissionItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetCurrentMissionItemRequest::ArenaDtor(void* object) {
  SetCurrentMissionItemRequest* _this = reinterpret_cast< SetCurrentMissionItemRequest* >(object);
  (void)_this;
}
void SetCurrentMissionItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetCurrentMissionItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCurrentMissionItemRequest& SetCurrentMissionItemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCurrentMissionItemRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void SetCurrentMissionItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrentMissionItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCurrentMissionItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  return target;
}

size_t SetCurrentMissionItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCurrentMissionItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCurrentMissionItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCurrentMissionItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
    MergeFrom(*source);
  }
}

void SetCurrentMissionItemRequest::MergeFrom(const SetCurrentMissionItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void SetCurrentMissionItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCurrentMissionItemRequest::CopyFrom(const SetCurrentMissionItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentMissionItemRequest::IsInitialized() const {
  return true;
}

void SetCurrentMissionItemRequest::InternalSwap(SetCurrentMissionItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentMissionItemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetCurrentMissionItemResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_SetCurrentMissionItemResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class SetCurrentMissionItemResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const SetCurrentMissionItemResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
SetCurrentMissionItemResponse::_Internal::mission_plan_result(const SetCurrentMissionItemResponse* msg) {
  return *msg->mission_plan_result_;
}
SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
}
SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(const SetCurrentMissionItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
}

void SetCurrentMissionItemResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetCurrentMissionItemResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_plan_result_ = nullptr;
}

SetCurrentMissionItemResponse::~SetCurrentMissionItemResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetCurrentMissionItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void SetCurrentMissionItemResponse::ArenaDtor(void* object) {
  SetCurrentMissionItemResponse* _this = reinterpret_cast< SetCurrentMissionItemResponse* >(object);
  (void)_this;
}
void SetCurrentMissionItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetCurrentMissionItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCurrentMissionItemResponse& SetCurrentMissionItemResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCurrentMissionItemResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void SetCurrentMissionItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrentMissionItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCurrentMissionItemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  return target;
}

size_t SetCurrentMissionItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCurrentMissionItemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCurrentMissionItemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCurrentMissionItemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
    MergeFrom(*source);
  }
}

void SetCurrentMissionItemResponse::MergeFrom(const SetCurrentMissionItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
}

void SetCurrentMissionItemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCurrentMissionItemResponse::CopyFrom(const SetCurrentMissionItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.SetCurrentMissionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentMissionItemResponse::IsInitialized() const {
  return true;
}

void SetCurrentMissionItemResponse::InternalSwap(SetCurrentMissionItemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_plan_result_, other->mission_plan_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentMissionItemResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsMissionFinishedRequest::InitAsDefaultInstance() {
}
class IsMissionFinishedRequest::_Internal {
 public:
};

IsMissionFinishedRequest::IsMissionFinishedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
}
IsMissionFinishedRequest::IsMissionFinishedRequest(const IsMissionFinishedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
}

void IsMissionFinishedRequest::SharedCtor() {
}

IsMissionFinishedRequest::~IsMissionFinishedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsMissionFinishedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IsMissionFinishedRequest::ArenaDtor(void* object) {
  IsMissionFinishedRequest* _this = reinterpret_cast< IsMissionFinishedRequest* >(object);
  (void)_this;
}
void IsMissionFinishedRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsMissionFinishedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsMissionFinishedRequest& IsMissionFinishedRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsMissionFinishedRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void IsMissionFinishedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsMissionFinishedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsMissionFinishedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  return target;
}

size_t IsMissionFinishedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsMissionFinishedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IsMissionFinishedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsMissionFinishedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
    MergeFrom(*source);
  }
}

void IsMissionFinishedRequest::MergeFrom(const IsMissionFinishedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IsMissionFinishedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsMissionFinishedRequest::CopyFrom(const IsMissionFinishedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsMissionFinishedRequest::IsInitialized() const {
  return true;
}

void IsMissionFinishedRequest::InternalSwap(IsMissionFinishedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsMissionFinishedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsMissionFinishedResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_IsMissionFinishedResponse_default_instance_._instance.get_mutable()->mission_plan_result_ = const_cast< ::mavsdk::rpc::mission_plan::MissionPlanResult*>(
      ::mavsdk::rpc::mission_plan::MissionPlanResult::internal_default_instance());
}
class IsMissionFinishedResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionPlanResult& mission_plan_result(const IsMissionFinishedResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionPlanResult&
IsMissionFinishedResponse::_Internal::mission_plan_result(const IsMissionFinishedResponse* msg) {
  return *msg->mission_plan_result_;
}
IsMissionFinishedResponse::IsMissionFinishedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
}
IsMissionFinishedResponse::IsMissionFinishedResponse(const IsMissionFinishedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_plan_result()) {
    mission_plan_result_ = new ::mavsdk::rpc::mission_plan::MissionPlanResult(*from.mission_plan_result_);
  } else {
    mission_plan_result_ = nullptr;
  }
  is_finished_ = from.is_finished_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
}

void IsMissionFinishedResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IsMissionFinishedResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  ::memset(&mission_plan_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_finished_) -
      reinterpret_cast<char*>(&mission_plan_result_)) + sizeof(is_finished_));
}

IsMissionFinishedResponse::~IsMissionFinishedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsMissionFinishedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_plan_result_;
}

void IsMissionFinishedResponse::ArenaDtor(void* object) {
  IsMissionFinishedResponse* _this = reinterpret_cast< IsMissionFinishedResponse* >(object);
  (void)_this;
}
void IsMissionFinishedResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsMissionFinishedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsMissionFinishedResponse& IsMissionFinishedResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsMissionFinishedResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void IsMissionFinishedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_plan_result_ != nullptr) {
    delete mission_plan_result_;
  }
  mission_plan_result_ = nullptr;
  is_finished_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsMissionFinishedResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_plan_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_finished = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_finished_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsMissionFinishedResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_plan_result(this), target, stream);
  }

  // bool is_finished = 2;
  if (this->is_finished() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_finished(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  return target;
}

size_t IsMissionFinishedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult mission_plan_result = 1;
  if (this->has_mission_plan_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_plan_result_);
  }

  // bool is_finished = 2;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsMissionFinishedResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IsMissionFinishedResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsMissionFinishedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
    MergeFrom(*source);
  }
}

void IsMissionFinishedResponse::MergeFrom(const IsMissionFinishedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_plan_result()) {
    _internal_mutable_mission_plan_result()->::mavsdk::rpc::mission_plan::MissionPlanResult::MergeFrom(from._internal_mission_plan_result());
  }
  if (from.is_finished() != 0) {
    _internal_set_is_finished(from._internal_is_finished());
  }
}

void IsMissionFinishedResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsMissionFinishedResponse::CopyFrom(const IsMissionFinishedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.IsMissionFinishedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsMissionFinishedResponse::IsInitialized() const {
  return true;
}

void IsMissionFinishedResponse::InternalSwap(IsMissionFinishedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, is_finished_)
      + sizeof(IsMissionFinishedResponse::is_finished_)
      - PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, mission_plan_result_)>(
          reinterpret_cast<char*>(&mission_plan_result_),
          reinterpret_cast<char*>(&other->mission_plan_result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IsMissionFinishedResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeMissionProgressRequest::InitAsDefaultInstance() {
}
class SubscribeMissionProgressRequest::_Internal {
 public:
};

SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
}
SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(const SubscribeMissionProgressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
}

void SubscribeMissionProgressRequest::SharedCtor() {
}

SubscribeMissionProgressRequest::~SubscribeMissionProgressRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeMissionProgressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubscribeMissionProgressRequest::ArenaDtor(void* object) {
  SubscribeMissionProgressRequest* _this = reinterpret_cast< SubscribeMissionProgressRequest* >(object);
  (void)_this;
}
void SubscribeMissionProgressRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeMissionProgressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeMissionProgressRequest& SubscribeMissionProgressRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeMissionProgressRequest_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void SubscribeMissionProgressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeMissionProgressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeMissionProgressRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  return target;
}

size_t SubscribeMissionProgressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeMissionProgressRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeMissionProgressRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeMissionProgressRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
    MergeFrom(*source);
  }
}

void SubscribeMissionProgressRequest::MergeFrom(const SubscribeMissionProgressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SubscribeMissionProgressRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeMissionProgressRequest::CopyFrom(const SubscribeMissionProgressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.SubscribeMissionProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeMissionProgressRequest::IsInitialized() const {
  return true;
}

void SubscribeMissionProgressRequest::InternalSwap(SubscribeMissionProgressRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeMissionProgressRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionProgressResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_plan::_MissionProgressResponse_default_instance_._instance.get_mutable()->mission_progress_ = const_cast< ::mavsdk::rpc::mission_plan::MissionProgress*>(
      ::mavsdk::rpc::mission_plan::MissionProgress::internal_default_instance());
}
class MissionProgressResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_plan::MissionProgress& mission_progress(const MissionProgressResponse* msg);
};

const ::mavsdk::rpc::mission_plan::MissionProgress&
MissionProgressResponse::_Internal::mission_progress(const MissionProgressResponse* msg) {
  return *msg->mission_progress_;
}
MissionProgressResponse::MissionProgressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.MissionProgressResponse)
}
MissionProgressResponse::MissionProgressResponse(const MissionProgressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_progress()) {
    mission_progress_ = new ::mavsdk::rpc::mission_plan::MissionProgress(*from.mission_progress_);
  } else {
    mission_progress_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.MissionProgressResponse)
}

void MissionProgressResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MissionProgressResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  mission_progress_ = nullptr;
}

MissionProgressResponse::~MissionProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.MissionProgressResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionProgressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_progress_;
}

void MissionProgressResponse::ArenaDtor(void* object) {
  MissionProgressResponse* _this = reinterpret_cast< MissionProgressResponse* >(object);
  (void)_this;
}
void MissionProgressResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionProgressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionProgressResponse& MissionProgressResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionProgressResponse_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void MissionProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_progress_ != nullptr) {
    delete mission_progress_;
  }
  mission_progress_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionProgressResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionProgress mission_progress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_progress(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionProgressResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionProgress mission_progress = 1;
  if (this->has_mission_progress()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_progress(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.MissionProgressResponse)
  return target;
}

size_t MissionProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionProgress mission_progress = 1;
  if (this->has_mission_progress()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_progress_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionProgressResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionProgressResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionProgressResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.MissionProgressResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.MissionProgressResponse)
    MergeFrom(*source);
  }
}

void MissionProgressResponse::MergeFrom(const MissionProgressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_progress()) {
    _internal_mutable_mission_progress()->::mavsdk::rpc::mission_plan::MissionProgress::MergeFrom(from._internal_mission_progress());
  }
}

void MissionProgressResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionProgressResponse::CopyFrom(const MissionProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.MissionProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionProgressResponse::IsInitialized() const {
  return true;
}

void MissionProgressResponse::InternalSwap(MissionProgressResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_progress_, other->mission_progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionProgressResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionProgress::InitAsDefaultInstance() {
}
class MissionProgress::_Internal {
 public:
};

MissionProgress::MissionProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.MissionProgress)
}
MissionProgress::MissionProgress(const MissionProgress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&current_, &from.current_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&current_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.MissionProgress)
}

void MissionProgress::SharedCtor() {
  ::memset(&current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&current_)) + sizeof(total_));
}

MissionProgress::~MissionProgress() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.MissionProgress)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionProgress::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MissionProgress::ArenaDtor(void* object) {
  MissionProgress* _this = reinterpret_cast< MissionProgress* >(object);
  (void)_this;
}
void MissionProgress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionProgress& MissionProgress::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionProgress_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void MissionProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.MissionProgress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&current_)) + sizeof(total_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionProgress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 current = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          current_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionProgress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.MissionProgress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 current = 1;
  if (this->current() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_current(), target);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.MissionProgress)
  return target;
}

size_t MissionProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.MissionProgress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 current = 1;
  if (this->current() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current());
  }

  // int32 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionProgress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.MissionProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionProgress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionProgress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.MissionProgress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.MissionProgress)
    MergeFrom(*source);
  }
}

void MissionProgress::MergeFrom(const MissionProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.MissionProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current() != 0) {
    _internal_set_current(from._internal_current());
  }
  if (from.total() != 0) {
    _internal_set_total(from._internal_total());
  }
}

void MissionProgress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.MissionProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionProgress::CopyFrom(const MissionProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.MissionProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionProgress::IsInitialized() const {
  return true;
}

void MissionProgress::InternalSwap(MissionProgress* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissionProgress, total_)
      + sizeof(MissionProgress::total_)
      - PROTOBUF_FIELD_OFFSET(MissionProgress, current_)>(
          reinterpret_cast<char*>(&current_),
          reinterpret_cast<char*>(&other->current_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionProgress::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionPlanResult::InitAsDefaultInstance() {
}
class MissionPlanResult::_Internal {
 public:
};

MissionPlanResult::MissionPlanResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_plan.MissionPlanResult)
}
MissionPlanResult::MissionPlanResult(const MissionPlanResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result_str().empty()) {
    result_str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result_str(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_plan.MissionPlanResult)
}

void MissionPlanResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base);
  result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

MissionPlanResult::~MissionPlanResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_plan.MissionPlanResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionPlanResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MissionPlanResult::ArenaDtor(void* object) {
  MissionPlanResult* _this = reinterpret_cast< MissionPlanResult* >(object);
  (void)_this;
}
void MissionPlanResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionPlanResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionPlanResult& MissionPlanResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionPlanResult_mission_5fplan_2fmission_5fplan_2eproto.base);
  return *internal_default_instance();
}


void MissionPlanResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionPlanResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_plan.MissionPlanResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::mission_plan::MissionPlanResult_Result>(val));
        } else goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.mission_plan.MissionPlanResult.result_str"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionPlanResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_plan.MissionPlanResult.Result result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.mission_plan.MissionPlanResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_plan.MissionPlanResult)
  return target;
}

size_t MissionPlanResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.mission_plan.MissionPlanResult.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionPlanResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionPlanResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionPlanResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_plan.MissionPlanResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_plan.MissionPlanResult)
    MergeFrom(*source);
  }
}

void MissionPlanResult::MergeFrom(const MissionPlanResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result_str().size() > 0) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void MissionPlanResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionPlanResult::CopyFrom(const MissionPlanResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_plan.MissionPlanResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionPlanResult::IsInitialized() const {
  return true;
}

void MissionPlanResult::InternalSwap(MissionPlanResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_str_.Swap(&other->result_str_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionPlanResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mission_plan
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::UploadMissionPlanRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::UploadMissionPlanRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::UploadMissionPlanRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::UploadMissionPlanResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::UploadMissionPlanResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::UploadMissionPlanResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::CancelMissionPlanUploadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::StartMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::StartMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::StartMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::StartMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::StartMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::StartMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::PauseMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::PauseMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::PauseMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::PauseMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::PauseMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::PauseMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::ClearMissionPlanRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::ClearMissionPlanRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::ClearMissionPlanRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::ClearMissionPlanResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::ClearMissionPlanResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::ClearMissionPlanResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::SetCurrentMissionItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::SetCurrentMissionItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::IsMissionFinishedRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::IsMissionFinishedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::IsMissionFinishedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::IsMissionFinishedResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::IsMissionFinishedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::IsMissionFinishedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::SubscribeMissionProgressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::MissionProgressResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::MissionProgressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::MissionProgressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::MissionProgress* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::MissionProgress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::MissionProgress >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_plan::MissionPlanResult* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_plan::MissionPlanResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_plan::MissionPlanResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
